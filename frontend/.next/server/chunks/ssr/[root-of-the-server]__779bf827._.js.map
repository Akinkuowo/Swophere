{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///Users/greatware/Desktop/All%20Folders/Projects/Swophere/frontend/src/app/verify/page.tsx"],"sourcesContent":["// app/verify/page.tsx\n\n'use client';\n\nimport { useEffect, useState } from 'react';\nimport { useSearchParams, useRouter } from 'next/navigation';\nimport Swal from 'sweetalert2';\nimport { CheckCircle, XCircle, Loader } from 'lucide-react';\n\nconst API_BASE_URL = 'http://localhost:4000';\n\nexport default function VerifyEmailPage() {\n  const searchParams = useSearchParams();\n  const router = useRouter();\n  const token = searchParams.get('token');\n  \n  const [verificationStatus, setVerificationStatus] = useState<'loading' | 'success' | 'error'>('loading');\n  const [message, setMessage] = useState('');\n\n  useEffect(() => {\n    const verifyEmail = async () => {\n      if (!token) {\n        setVerificationStatus('error');\n        setMessage('Invalid verification link. Please check your email and try again.');\n        return;\n      }\n\n      try {\n        const response = await fetch(`${API_BASE_URL}/api/auth/verify?token=${token}`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        });\n\n        const data = await response.json();\n\n        if (data.success) {\n          setVerificationStatus('success');\n          setMessage(data.message);\n          \n          // Show success alert\n          Swal.fire({\n            icon: 'success',\n            title: 'Email Verified!',\n            text: data.message,\n            confirmButtonColor: '#6b21a8',\n            timer: 3000,\n            timerProgressBar: true,\n          }).then(() => {\n            // Redirect to login page after successful verification\n            router.push('/');\n          });\n        } else {\n          setVerificationStatus('error');\n          setMessage(data.message);\n          \n          Swal.fire({\n            icon: 'error',\n            title: 'Verification Failed',\n            text: data.message,\n            confirmButtonColor: '#d33',\n          });\n        }\n      } catch (error: any) {\n        console.error('Verification error:', error);\n        setVerificationStatus('error');\n        setMessage('An error occurred during verification. Please try again.');\n        \n        Swal.fire({\n          icon: 'error',\n          title: 'Verification Error',\n          text: 'An error occurred during verification. Please try again.',\n          confirmButtonColor: '#d33',\n        });\n      }\n    };\n\n    verifyEmail();\n  }, [token, router]);\n\n  const handleResendVerification = async () => {\n    // You can implement resend verification logic here if needed\n    Swal.fire({\n      icon: 'info',\n      title: 'Resend Verification',\n      text: 'Please contact support or try signing up again if you need a new verification link.',\n      confirmButtonColor: '#6b21a8',\n    });\n  };\n\n  const handleGoToLogin = () => {\n    router.push('/');\n  };\n\n  const handleGoToSignup = () => {\n    router.push('/signup');\n  };\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-cover bg-center\" \n         style={{ backgroundImage: \"url('/images/page-title.jpg')\" }}>\n      <div className=\"max-w-md w-full mx-4\">\n        <div className=\"bg-white p-8 rounded-lg shadow-lg text-center\">\n          <div className=\"flex justify-center mb-6\">\n            <img \n              src=\"/images/logo.png\" \n              alt=\"LetSwap Logo\" \n              className=\"w-1/2\"\n            />\n          </div>\n\n          <div className=\"mb-6\">\n            {verificationStatus === 'loading' && (\n              <Loader className=\"w-16 h-16 mx-auto mb-4 text-purple-600 animate-spin\" />\n            )}\n            {verificationStatus === 'success' && (\n              <CheckCircle className=\"w-16 h-16 mx-auto mb-4 text-green-500\" />\n            )}\n            {verificationStatus === 'error' && (\n              <XCircle className=\"w-16 h-16 mx-auto mb-4 text-red-500\" />\n            )}\n            \n            <h2 className=\"text-2xl font-bold text-gray-800 mb-4\">\n              {verificationStatus === 'loading' && 'Verifying Email...'}\n              {verificationStatus === 'success' && 'Email Verified!'}\n              {verificationStatus === 'error' && 'Verification Failed'}\n            </h2>\n            \n            <p className=\"text-gray-600 mb-6\">\n              {verificationStatus === 'loading' && 'Please wait while we verify your email address...'}\n              {verificationStatus === 'success' && message}\n              {verificationStatus === 'error' && message}\n            </p>\n          </div>\n\n          {verificationStatus === 'loading' && (\n            <div className=\"animate-pulse\">\n              <div className=\"h-4 bg-gray-200 rounded w-3/4 mx-auto mb-2\"></div>\n              <div className=\"h-4 bg-gray-200 rounded w-1/2 mx-auto\"></div>\n            </div>\n          )}\n\n          {verificationStatus === 'success' && (\n            <div className=\"space-y-4\">\n              <button\n                onClick={handleGoToLogin}\n                className=\"w-full bg-purple-600 text-yellow-400 py-3 px-4 rounded-md hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-purple-600 focus:ring-offset-2 transition duration-200 font-medium\"\n              >\n                Go to Login\n              </button>\n              <p className=\"text-sm text-gray-500\">\n                You will be automatically redirected to the login page in a few seconds...\n              </p>\n            </div>\n          )}\n\n          {verificationStatus === 'error' && (\n            <div className=\"space-y-4\">\n              <button\n                onClick={handleResendVerification}\n                className=\"w-full bg-yellow-500 text-white py-3 px-4 rounded-md hover:bg-yellow-600 focus:outline-none focus:ring-2 focus:ring-yellow-500 focus:ring-offset-2 transition duration-200 font-medium\"\n              >\n                Resend Verification Email\n              </button>\n              \n              <button\n                onClick={handleGoToSignup}\n                className=\"w-full bg-gray-600 text-white py-3 px-4 rounded-md hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-gray-600 focus:ring-offset-2 transition duration-200 font-medium\"\n              >\n                Create New Account\n              </button>\n              \n              <button\n                onClick={handleGoToLogin}\n                className=\"w-full border border-purple-600 text-purple-600 py-3 px-4 rounded-md hover:bg-purple-50 focus:outline-none focus:ring-2 focus:ring-purple-600 focus:ring-offset-2 transition duration-200 font-medium\"\n              >\n                Back to Login\n              </button>\n            </div>\n          )}\n\n          {/* Support information */}\n          {verificationStatus === 'error' && (\n            <div className=\"mt-6 p-4 bg-gray-50 rounded-md\">\n              <p className=\"text-sm text-gray-600\">\n                Need help? Contact our support team at{' '}\n                <a href=\"mailto:support@letswap.com\" className=\"text-purple-600 hover:underline\">\n                  support@letswap.com\n                </a>\n              </p>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}