{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///Users/greatware/Desktop/All%20Folders/Projects/Swophere/frontend/src/app/components/signup.tsx"],"sourcesContent":["// components/SignupForm.tsx\n\n'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\nimport Swal from 'sweetalert2';\nimport { Eye, EyeOff } from 'lucide-react';\n\ninterface SignupFormData {\n  first_name: string;\n  last_name: string;\n  username: string;\n  email: string;\n  password: string;\n}\n\nconst API_BASE_URL = 'http://localhost:4000';\n\nexport default function SignupForm() {\n  const [formData, setFormData] = useState<SignupFormData>({\n    first_name: '',\n    last_name: '',\n    username: '',\n    email: '',\n    password: ''\n  });\n  const [errors, setErrors] = useState<Partial<SignupFormData & { general: string }>>({});\n  const [loading, setLoading] = useState(false);\n  const [usernameAvailable, setUsernameAvailable] = useState<boolean | null>(null);\n  const [emailAvailable, setEmailAvailable] = useState<boolean | null>(null);\n  const [showPassword, setShowPassword] = useState(false);\n  const router = useRouter();\n\n  // Check username availability\n  useEffect(() => {\n    const checkUsername = async () => {\n      if (formData.username.length >= 3) {\n        try {\n          const response = await fetch(\n            `${API_BASE_URL}/api/auth/check-username/${formData.username}`\n          );\n          const data = await response.json();\n          setUsernameAvailable(data.available);\n        } catch (error) {\n          console.error('Error checking username:', error);\n        }\n      }\n    };\n\n    const timeoutId = setTimeout(checkUsername, 500);\n    return () => clearTimeout(timeoutId);\n  }, [formData.username]);\n\n  // Check email availability\n  useEffect(() => {\n    const checkEmail = async () => {\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      if (formData.email && emailRegex.test(formData.email)) {\n        try {\n          const response = await fetch(\n            `${API_BASE_URL}/api/auth/check-email/${formData.email}`\n          );\n          const data = await response.json();\n          setEmailAvailable(data.available);\n        } catch (error) {\n          console.error('Error checking email:', error);\n        }\n      }\n    };\n\n    const timeoutId = setTimeout(checkEmail, 500);\n    return () => clearTimeout(timeoutId);\n  }, [formData.email]);\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n\n    // Clear specific error when user starts typing\n    if (errors[name as keyof SignupFormData]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: undefined\n      }));\n    }\n  };\n\n  const validateForm = (): boolean => {\n    const newErrors: Partial<SignupFormData> = {};\n\n    if (!formData.first_name.trim()) newErrors.first_name = 'First name is required';\n    if (!formData.last_name.trim()) newErrors.last_name = 'Last name is required';\n    if (!formData.username.trim()) newErrors.username = 'Username is required';\n    else if (formData.username.length < 3) newErrors.username = 'Username must be at least 3 characters';\n    if (!formData.email.trim()) newErrors.email = 'Email is required';\n    else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) newErrors.email = 'Email is invalid';\n    if (!formData.password) newErrors.password = 'Password is required';\n    else if (formData.password.length < 6) newErrors.password = 'Password must be at least 6 characters';\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setLoading(true);\n    setErrors({});\n\n    if (!validateForm()) {\n      setLoading(false);\n      return;\n    }\n\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/auth/signup`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(formData),\n      });\n\n      const data = await response.json();\n\n      if (!response.ok) throw new Error(data.message || 'Registration failed');\n\n      if (data.success) {\n        Swal.fire({\n          icon: 'success',\n          title: 'Registration Successful',\n          text: 'You can now log in!',\n          confirmButtonColor: '#6b21a8',\n        }).then(() => router.push('/'));\n      } else {\n        Swal.fire({\n          icon: 'error',\n          title: 'Error',\n          text: data.message,\n          confirmButtonColor: '#d33',\n        });\n      }\n    } catch (error: any) {\n      console.error('Signup error:', error);\n      Swal.fire({\n        icon: 'error',\n        title: 'Oops...',\n        text: error.message || 'An error occurred during registration',\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n\n  return (\n    <div\n      className=\"min-h-screen flex items-center justify-center bg-cover bg-center\"\n      style={{ backgroundImage: \"url('/images/page-title.jpg')\" }}\n    >\n      <div className=\"max-w-md w-full mx-4\">\n        <div className=\"bg-white p-8 rounded-lg shadow-lg\">\n          <form onSubmit={handleSubmit}>\n            <div className=\"flex justify-center mb-6\">\n              <img src=\"/images/logo.png\" alt=\"LetSwap Logo\" className=\"w-1/2\" />\n            </div>\n\n            {/* First Name */}\n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">First Name</label>\n              <input\n                type=\"text\"\n                name=\"first_name\"\n                value={formData.first_name}\n                onChange={handleChange}\n                placeholder=\"Enter Your Name\"\n                required\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-600\"\n              />\n              {errors.first_name && <p className=\"text-red-500 text-xs mt-1\">{errors.first_name}</p>}\n            </div>\n\n            {/* Last Name */}\n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">Last Name</label>\n              <input\n                type=\"text\"\n                name=\"last_name\"\n                value={formData.last_name}\n                onChange={handleChange}\n                placeholder=\"Enter Your Surname\"\n                required\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-600\"\n              />\n              {errors.last_name && <p className=\"text-red-500 text-xs mt-1\">{errors.last_name}</p>}\n            </div>\n\n            {/* Username */}\n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">Username</label>\n              <input\n                type=\"text\"\n                name=\"username\"\n                value={formData.username}\n                onChange={handleChange}\n                placeholder=\"Enter Your Username\"\n                required\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-600\"\n              />\n              {errors.username && <p className=\"text-red-500 text-xs mt-1\">{errors.username}</p>}\n              {formData.username.length >= 3 && usernameAvailable !== null && (\n                <p className={`text-xs mt-1 ${usernameAvailable ? 'text-green-500' : 'text-red-500'}`}>\n                  {usernameAvailable ? 'Username is available' : 'Username already taken'}\n                </p>\n              )}\n            </div>\n\n            {/* Email */}\n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">Email</label>\n              <input\n                type=\"email\"\n                name=\"email\"\n                value={formData.email}\n                onChange={handleChange}\n                placeholder=\"Enter Your Email Address\"\n                required\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-600\"\n              />\n              {errors.email && <p className=\"text-red-500 text-xs mt-1\">{errors.email}</p>}\n              {formData.email && emailAvailable !== null && (\n                <p className={`text-xs mt-1 ${emailAvailable ? 'text-green-500' : 'text-red-500'}`}>\n                  {emailAvailable ? 'Email is available' : 'Email already exists'}\n                </p>\n              )}\n            </div>\n\n            {/* Password with eye icon */}\n            <div className=\"mb-6\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">Password</label>\n              <div className=\"relative\">\n                <input\n                  type={showPassword ? 'text' : 'password'}\n                  name=\"password\"\n                  value={formData.password}\n                  onChange={handleChange}\n                  placeholder=\"Enter Your Password\"\n                  required\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-600 pr-10\"\n                />\n                <button\n                  type=\"button\"\n                  onClick={togglePasswordVisibility}\n                  className=\"cursor-pointer absolute inset-y-0 right-0 pr-3 flex items-center text-gray-500 hover:text-gray-700 focus:outline-none\"\n                  aria-label={showPassword ? 'Hide password' : 'Show password'}\n                >\n                  {showPassword ? (\n                    <EyeOff size={20} className=\"text-gray-400\" />\n                  ) : (\n                    <Eye size={20} className=\"text-gray-400\" />\n                  )}\n                </button>\n              </div>\n              {errors.password && <p className=\"text-red-500 text-xs mt-1\">{errors.password}</p>}\n            </div>\n\n            {/* Submit Button */}\n            <button\n              type=\"submit\"\n              disabled={loading || usernameAvailable === false || emailAvailable === false}\n              className=\"cursor-pointer w-full bg-purple-600 text-yellow-400 py-3 px-4 rounded-md hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-purple-600 focus:ring-offset-2 transition duration-200 disabled:opacity-50 disabled:cursor-not-allowed font-medium\"\n            >\n              {loading ? (\n                <span className=\"flex items-center justify-center\">\n                  <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                    <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                  </svg>\n                  Creating Account...\n                </span>\n              ) : (\n                'Sign Up'\n              )}\n            </button>\n\n            <div className=\"mt-4 text-center\">\n              <p className=\"text-gray-600\">\n                Already have an account?{' '}\n                <a href=\"/login\" className=\"text-yellow-600 hover:underline font-medium\">\n                  Sign in Here!\n                </a>\n              </p>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}